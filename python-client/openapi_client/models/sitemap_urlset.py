# coding: utf-8

"""
    WillItSync

    Provides various methods for retrieving, parsing, and validating the  various portions of a web harvesting workflow.   # noqa: E501

    The version of the OpenAPI document: 1.1.1
    Contact: jevans97@utk.edu
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class SitemapUrlset(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'url': 'str',
        'lastmod': 'datetime'
    }

    attribute_map = {
        'url': 'url',
        'lastmod': 'lastmod'
    }

    def __init__(self, url=None, lastmod=None):  # noqa: E501
        """SitemapUrlset - a model defined in OpenAPI"""  # noqa: E501

        self._url = None
        self._lastmod = None
        self.discriminator = None

        if url is not None:
            self.url = url
        if lastmod is not None:
            self.lastmod = lastmod

    @property
    def url(self):
        """Gets the url of this SitemapUrlset.  # noqa: E501

        The value of the url element of a loc entry in a sitemap.   # noqa: E501

        :return: The url of this SitemapUrlset.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this SitemapUrlset.

        The value of the url element of a loc entry in a sitemap.   # noqa: E501

        :param url: The url of this SitemapUrlset.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def lastmod(self):
        """Gets the lastmod of this SitemapUrlset.  # noqa: E501

        The value of the lastmod element of the loc entry.   # noqa: E501

        :return: The lastmod of this SitemapUrlset.  # noqa: E501
        :rtype: datetime
        """
        return self._lastmod

    @lastmod.setter
    def lastmod(self, lastmod):
        """Sets the lastmod of this SitemapUrlset.

        The value of the lastmod element of the loc entry.   # noqa: E501

        :param lastmod: The lastmod of this SitemapUrlset.  # noqa: E501
        :type: datetime
        """

        self._lastmod = lastmod

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SitemapUrlset):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
